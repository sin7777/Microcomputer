#include "p16F1786.inc"

; CONFIG1
; __config 0xFFFC
 __CONFIG _CONFIG1, _FOSC_INTOSC & _WDTE_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOREN_ON & _CLKOUTEN_OFF & _IESO_ON & _FCMEN_ON
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _WRT_OFF & _VCAPEN_OFF & _PLLEN_ON & _STVREN_ON & _BORV_LO & _LPBOR_OFF & _LVP_ON
 
 UDATA_SHR
 set1 res 1h
 set2 res 1h
 set3 res 1h
 set4 res 1h
 port res 1h
 KEY_FINAL res 1h
 KEY_BEFORE res 1h
 STATE res 1h   ;??
 STATE_BEFORE res 1h;?????????
 M_CNT res 1h   ;??????
 N_CNT res 1h   ;??????
 R_LONG res 1h  ;?????
 L1_LONG res 1h   ;?????
 L2_LONG res 1h    ;?????
 L3_LONG RES 1h    ;?????

 CURRENT_COUNT RES 1h   ;????
 
 UDATA_OVR
 count res 1h
 delay res 1h
 key res 1h
 key_temp res 1h
; port res 1h
 counter_n res 1h
 counter0 res 1h
 row res 1h
 col res 1h
 portb_read res 1h
 counter_col res 1h
 KEY_FINAL16 res 1h
idata
COUNT0 RES 1H
COUNT1 RES 1H
COUNT2 RES 1H
COUNT3 RES 1H
COUNT4 RES 1H
COUNT5 RES 1H
COUNT6 RES 1H
COUNT7 RES 1H
COUNT8 RES 1H
COUNT9 RES 1H
TYPE res 1h   ;????
TYPE_BEFORE res 1h
 
 
    ; TODO INSERT CONFIG CODE HERE USING CONFIG BITS GENERATOR
RST  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

ISR CODE 0x0004  
    BANKSEL TMR0
    movlw b'11101100'
    movwf TMR0 ;
    BANKSEL TRISB
    movlw B'00000000'
    movwf TRISB
    banksel LATB
    movlw B'11111111'
    movwf LATB
    call GET_KEY;
    call CHECK_KEY
    call CHANGE
;    call TRANSE
    BTFSC counter_col,0
    call ACTION
    call SELECT
    call OUTPUT
    banksel INTCON
    movlw b'10100000'
    movwf INTCON
    RETURN
; TODO ADD INTERRUPTS HERE IF USED

    
MAIN_PROG CODE                      ; let linker place main program
 TABLENUM:
    ADDWF PCL,F
    RETLW B'00000001'
    RETLW B'01001111'
    RETLW B'00010010'
    RETLW B'00000110'
    RETLW B'01001100'
    RETLW B'00100100'
    RETLW B'00100000'
    RETLW B'00001111'
    RETLW B'00000000'
    RETLW B'00000100'
    
ACTION
  MOVF KEY_FINAL,0
 XORWF KEY_BEFORE,0
 SUBLW B'00000000'
 BTFSS STATUS,0
 CALL CHANGE_KEY;change key
 CALL NO_CHANGE_KEY;NO change
 
 ;??type????????????count
 CALL COUNT_CHANGE
 CALL DISPLAY;????
 return
;---------------------action ---------------------- 
 ;KEY????
CHANGE_KEY
 ;?KEY????KEY_BEFORE
 MOVF KEY_FINAL,0
 MOVWF KEY_BEFORE
 
 
 ;??STATE_BEFORE??1
 MOVLW B'00000001'
 MOVWF STATE_BEFORE
 ;????????
 MOVLW 0x80
 MOVWF M_CNT
 MOVLW 0x00
 MOVWF N_CNT
 MOVLW 0xFF
 MOVWF R_LONG
 RETURN
 
; no change key
NO_CHANGE_KEY
 ;?STATE?STATE_BEFORE????????????????
 MOVF STATE,0
 XORWF STATE_BEFORE,0
 SUBLW B'00000000'
 BTFSS STATUS,0
 GOTO INEQUAL
 GOTO EQUAL
    INEQUAL
	MOVF STATE,0
	SUBLW B'00000000'
	BTFSS STATUS,0
	GOTO ZERO_TO_ONE  ;0 -> 1
	GOTO ONE_TO_ZERO  ;1 -> 0
	
    EQUAL 
	MOVF STATE,0
	SUBLW B'00000000'
	BTFSS STATUS,0
	GOTO ONE_TO_ONE    ;1=1,1 -> 1
	GOTO ZERO_TO_ZERO   ;0=0,0 -> 0
	
    ONE_TO_ZERO
	INCF N_CNT
	GOTO NO_CHANGE_KEL_END ;?1?0?????????
	
    ZERO_TO_ONE
	INCF M_CNT
	MOVLW B'00000000'
	MOVWF R_LONG  ;?????????
	GOTO NO_CHANGE_KEL_END ;?0?1?????????
	
    ZERO_TO_ZERO
	INCF N_CNT ;N_CNT++
	MOVF N_CNT,0 ;??N_CNT?????2
	SUBLW B'00000010'
	BTFSC STATUS,0
	GOTO CLEAR_M_CNT;M_CNT=0
	GOTO ZERO_CONTINUE
	
	CLEAR_M_CNT
	    MOVLW B'00000000'
	    MOVWF M_CNT
	    GOTO NO_CHANGE_KEL_END
	    
	ZERO_CONTINUE
	    MOVF R_LONG,0  ;??R<L3,
	    SUBWF L3_LONG,0
	    BTFSC STATUS,0
	    GOTO DOUBLE_PRESS;?????
	    GOTO ZERO_CONTINUE_CONTIUNE;??
	    
	DOUBLE_PRESS
	    BANKSEL TYPE
	    MOVLW B'00000001'
	    MOVWF TYPE  ;01????
	    INCF L2_LONG,0  ;??N_CNT=L2_LONG+1
	    MOVWF N_CNT
	    GOTO NO_CHANGE_KEL_END
	    
	ZERO_CONTINUE_CONTIUNE
	    MOVF L2_LONG,0 ;??L2 = N ?
	    XORWF N_CNT,0
	    SUBLW B'0000000'
	    BTFSS STATUS,0
	    GOTO NO_CHANGE_KEL_END  ;??
	    GOTO LONG_PRESS  ;????? ;??
	    
	LONG_PRESS
	    BANKSEL TYPE
	    MOVLW B'00000010'
	    MOVWF TYPE ;10????
	    GOTO NO_CHANGE_KEL_END
 
    ONE_TO_ONE
	INCF M_CNT ;M_CNT++
	INCF R_LONG ;R_LONG++
	MOVF M_CNT,0 ;??M_CNT?????2
	SUBLW B'00000010'
	BTFSC STATUS,0
	GOTO CLEAR_N_CNT;N_CNT=0
	GOTO ONE_CONTINUE
	
	CLEAR_N_CNT
	    MOVLW B'00000000' ;??N_CNT
	    MOVWF N_CNT
	    GOTO NO_CHANGE_KEL_END
	    
	ONE_CONTINUE
	    MOVF L2_LONG,0  ;??L2<N_CNT,
	    SUBWF N_CNT,0
	    BTFSC STATUS,0
	    GOTO ADD_M_CNT;??M=L1+1
	    GOTO ONE_CONTINUE_CONTIUNE;??
	    
	ADD_M_CNT
	    INCF L1_LONG,0 ;??M=L1+1
	    MOVWF M_CNT
	    GOTO ONE_CONTINUE_CONTIUNE;??
	  
	ONE_CONTINUE_CONTIUNE
	    MOVF L1_LONG,0 ;??L1 = M ?
	    XORWF M_CNT,0
	    SUBLW B'0000000'
	    BTFSS STATUS,0
	    GOTO NO_CHANGE_KEL_END  ;??
	    GOTO SHORT_PRESS  ;????? ;??
	    
	SHORT_PRESS
	    BANKSEL TYPE
	    MOVLW B'0000000'
	    MOVWF TYPE
	    GOTO NO_CHANGE_KEL_END
 
 NO_CHANGE_KEL_END
 ;??STATE_BEFORE
 MOVF STATE,0
 MOVWF STATE_BEFORE
 
 RETURN
 

COUNT_CHANGE
 ;??TYPE????
 BANKSEL TYPE
 MOVF TYPE,0
 XORWF TYPE_BEFORE,0
 SUBLW B'00000000'
 BTFSS STATUS,0
 CALL CHANGE_TYPE;change key ??
 GOTO COUNT_CHANGE_END;NO change ??
 
    CHANGE_TYPE
	 ;??KEY???count
	 MOVF KEY_FINAL,0
	 SUBLW B'00000000'
	 BTFSC STATUS,0
	 CALL COUNT_ONE;NO change ??
;	 CALL CHANGE_KEY;change key ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00000001'
	 BTFSC STATUS,0
	 CALL COUNT_TWO;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00000010'
	 BTFSC STATUS,0
	 CALL COUNT_THREE;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00000011'
	 BTFSC STATUS,0
	 CALL COUNT_FOUR;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00000100'
	 BTFSC STATUS,0
	 CALL COUNT_FIVE;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00000101'
	 BTFSC STATUS,0
	 CALL COUNT_SIX;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00000110'
	 BTFSC STATUS,0
	 CALL COUNT_SEVEN;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00000111'
	 BTFSC STATUS,0
	 CALL COUNT_EIGHT;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00001000'
	 BTFSC STATUS,0
	 CALL COUNT_NINE;NO change ??
	 MOVF KEY_FINAL,0
	 SUBLW B'00001001'
	 BTFSC STATUS,0
	 CALL COUNT_TEN;NO change ??
	 MOVLW B'00000000' ;KEY=FF
	 MOVWF CURRENT_COUNT
	 GOTO COUNT_CHANGE_END  ;KEY???0-9
	 
	 COUNT_ONE
	    BANKSEL COUNT0
	    INCF COUNT0
	    MOVF COUNT0,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_TWO
	    BANKSEL COUNT1   
	    INCF COUNT1
	    MOVF COUNT1,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_THREE
	    BANKSEL COUNT2
	    INCF COUNT2
	    MOVF COUNT2,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_FOUR
	    BANKSEL COUNT3
	    INCF COUNT3
	    MOVF COUNT3,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_FIVE
	    BANKSEL COUNT4
	    INCF COUNT4
	    MOVF COUNT4,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_SIX
	    BANKSEL COUNT5
	    INCF COUNT5
	    MOVF COUNT5,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_SEVEN
	    BANKSEL COUNT6
	    INCF COUNT6
	    MOVF COUNT6,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_EIGHT
	    BANKSEL COUNT7
	    INCF COUNT7
	    MOVF COUNT7,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_NINE
	    BANKSEL COUNT8
	    INCF COUNT8
	    MOVF COUNT8,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 COUNT_TEN
	    BANKSEL COUNT9
	    INCF COUNT9
	    MOVF COUNT9,0
	    MOVWF CURRENT_COUNT
	    GOTO COUNT_CHANGE_END
	 
 COUNT_CHANGE_END
 RETURN
 ;????
 DISPLAY
     MOVF KEY_FINAL,0
     SUBLW B'11111111'
     BTFSS STATUS,0
     CALL DISPALY_KEY;change  ??
     CALL LIGHTNING;NO change ??
     
     LIGHTNING
	MOVLW B'11111110'
	MOVWF set1
	MOVWF set2
	MOVWF set3
	MOVWF set4
	GOTO DISPALY_END
     
     DISPALY_KEY
	;???
	MOVF KEY_FINAL
	CALL TABLENUM
	MOVWF set1
	;???
	BANKSEL TYPE
	MOVF TYPE
	CALL TABLENUM
	MOVWF set2
	;????
	MOVF CURRENT_COUNT
	ANDLW B'00000111'
	CALL TABLENUM
	MOVWF set4
	
	LSRF CURRENT_COUNT,1
	LSRF CURRENT_COUNT,1
	LSRF CURRENT_COUNT,1
	MOVF CURRENT_COUNT
	ANDLW B'00000111'
	CALL TABLENUM
	MOVWF set3
	
	GOTO DISPALY_END
     
DISPALY_END
 RETURN
;_____________________action_______________________
;TOKEY0
; MOVLW B'00000000'
; BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
;TOKEY1
; MOVLW B'00000001'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY2
; MOVLW B'00000010'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY3
; MOVLW B'00000011'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY4
; MOVLW B'00000100'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY5
; MOVLW B'00000101'
; BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY6
; MOVLW B'00000110'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY7
; MOVLW B'00000111'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY8
; MOVLW B'00001000'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TOKEY9
; MOVLW B'00001001'
;  BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
;  TOKEY10
; MOVLW B'11111111'
; BANKSEL KEY_FINAL
; MOVWF KEY_FINAL
; RETURN
; TRANSE
; MOVF KEY_FINAL16,0
; XORLW 0x77
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY0
;  MOVF KEY_FINAL16,0
; XORLW 0x7B
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY1
;  MOVF KEY_FINAL16,0
; XORLW 0xBB
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY2
;  MOVF KEY_FINAL16,0
; XORLW 0x7D
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY3
;  MOVF KEY_FINAL16,0
; XORLW 0xBD
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY4
;  MOVF KEY_FINAL16,0
; XORLW 0xDD
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY5
;  MOVF KEY_FINAL16,0
; XORLW 0x70
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY6
;  MOVF KEY_FINAL16,0
; XORLW 0xB8
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY7
;  MOVF KEY_FINAL16,0
; XORLW 0xDC
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY8
;  MOVF KEY_FINAL16,0
; XORLW 0xEE
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY9
;MOVF KEY_FINAL16,0
; XORLW 0xFF
; SUBLW b'00000000'
; BTFSC STATUS,0
; CALL TOKEY10
 RETURN
CHANGE
 MOVF STATE,0
 SUBLW b'00000000'
 BTFSC STATUS,0
 call CHECKSAME
return
CHECKSAME
 MOVF key,0
 XORWF KEY_FINAL16,0
 SUBLW b'00000000'
 BTFSS STATUS,0
 call MAKE_KEY
return
MAKE_KEY
 BANKSEL key
 MOVF key,0
 MOVWF KEY_FINAL16
RETURN
 FINDKEY
 MOVLW B'00000000'
 MOVWF STATE
 BANKSEL key
 MOVF key_temp,0
 MOVWF key
RETURN 
INPUT3
 MOVLW b'00000000'
 MOVWF set1
RETURN
SELECT
 BANKSEL key
 MOVLW b'10111011'
 XORWF key,0
 SUBLW b'00000000'
 BTFSC STATUS,0
 call INPUT3
RETURN
CLEAN_KEY
 BANKSEL key_temp
 movlw b'11111111'
 MOVWF key
 MOVLW B'00000001'
 MOVWF STATE
 RETURN
 CLEAN_KEY1
 BANKSEL key_temp
 movlw b'11111111'
 MOVWF key
 RETURN
CHECK2
 BANKSEL key_temp
 
 MOVLW b'01110000'
 XORWF key_temp,0
 SUBLW b'00000000'
 BTFSC STATUS,0
 call FINDKEY
 BANKSEL key_temp
 MOVLW b'10111000'
 XORWF key_temp,0
 SUBLW b'00000000'
 BTFSC STATUS,0
 call FINDKEY
 BANKSEL key_temp
 MOVLW b'11011100'
 XORWF key_temp,0
 SUBLW b'00000000'
 BTFSC STATUS,0
 call FINDKEY

 RETURN
CHECK_KEY
 BANKSEL STATE
 MOVLW B'00000000'
 MOVWF STATE
 BANKSEL key_temp
 MOVF key,0
 MOVWF key_temp
 BTFSS key_temp,0
 INCF counter0,1
 BTFSS key_temp,1
 INCF counter0,1
 BTFSS key_temp,2
 INCF counter0,1
 BTFSS key_temp,3
 INCF counter0,1
 BTFSS key_temp,4
 INCF counter0,1
 BTFSS key_temp,5
 INCF counter0,1
 BTFSS key_temp,6
 INCF counter0,1
 BTFSS key_temp,7
 INCF counter0,1
 MOVLW b'00000011'
 SUBWF counter0,1
 BTFSC STATUS,0
 call CLEAN_KEY1
 MOVLW b'00001111'
 IORWF key_temp,0
 XORLW b'11111111'
 SUBLW b'00000000'
 BTFSC STATUS,0
 call CLEAN_KEY
 CLRF counter0
 CALL CHECK2
RETURN 
PUT_KEY
 MOVlW b'11110000'
 MOVWF key
 LSLF row,1
 LSLF row,1
 LSLF row,1
 LSLF row,1
 MOVF row,0
 ANDWF key,1
 MOVF col,0
 IORWF key,1
 RETURN 
GET_COL0
 BANKSEL TRISB
 movlw B'00000000'
 movwf TRISB
 banksel LATB
 movlw B'11111111'
 movwf LATB
 BANKSEL TRISB
 movlw B'00001111'
 movwf TRISB
 BANKSEL PORTB
 MOVF PORTB,0
 BANKSEL portb_read
 MOVWF portb_read
 MOVLW b'11110000'
 IORWF portb_read,1
 MOVF portb_read,0
 banksel row
 ANDWF row,1
 BTFSS portb_read,0
 BCF col,0
 BTFSS portb_read,1
 BCF col,0 
 BTFSS portb_read,2
 BCF col,0 
 BTFSS portb_read,3
 BCF col,0 
 RETURN
GET_COL1
 BANKSEL TRISB
 movlw B'00001110'
 movwf TRISB
  BANKSEL TRISB
 movlw B'00000000'
 movwf TRISB
 banksel PORTB
 movlw B'00001110'
 movwf PORTB
 BANKSEL TRISB
 movlw B'00001110'
 movwf TRISB
 BANKSEL PORTB
 MOVF PORTB,0
 BANKSEL portb_read
 MOVWF portb_read
 MOVLW b'11110001'
 IORWF portb_read,1
 MOVF portb_read,0
 
 ANDWF row,1
 
 BTFSS portb_read,0
 BCF col,1
 BTFSS portb_read,1
 BCF col,1 
 BTFSS portb_read,2
 BCF col,1 
 BTFSS portb_read,3
 BCF col,1 
 RETURN
GET_COL2
 BANKSEL TRISB
 movlw B'00000000'
 movwf TRISB
 banksel LATB
 movlw B'11111101'
 movwf LATB
 BANKSEL TRISB
 movlw B'00001100'
 movwf TRISB
 BANKSEL PORTB
 MOVF PORTB,0
 BANKSEL portb_read
 MOVWF portb_read
 MOVLW b'11110011'
 IORWF portb_read,1
 MOVF portb_read,0
 banksel row
 ANDWF row,1
 banksel col
 BTFSS portb_read,0
 BCF col,2
 BTFSS portb_read,1
 BCF col,2 
 BTFSS portb_read,2
 BCF col,2 
 BTFSS portb_read,3
 BCF col,2 
 RETURN
GET_COL3
  banksel LATB
 movlw B'11111111'
 movwf LATB
 BANKSEL TRISB
 movlw B'00000000'
 movwf TRISB
 banksel PORTB
 movlw B'11111111'
 movwf PORTB
 banksel LATB
 movlw B'11111011'
 movwf LATB
 BANKSEL TRISB
 movlw B'00001000'
 movwf TRISB
 BANKSEL PORTB
 MOVF PORTB,0
 BANKSEL portb_read
 MOVWF portb_read
 MOVLW b'11110111'
 IORWF portb_read,1
 MOVF portb_read,0
 banksel row
 ANDWF row,1
 BTFSS portb_read,0
 BCF col,3
 BTFSS portb_read,1
 BCF col,3 
 BTFSS portb_read,2
 BCF col,3 
 BTFSS portb_read,3
 BCF col,3 
 RETURN

RESET_KEY
 BANKSEL col
 MOVLW B'00001111'
 MOVWF col
 BANKSEL row
 MOVLW B'00001111'
 MOVWF row
 BANKSEL counter_col
 MOVLW B'00000001'
 MOVWF counter_col
 MOVLW B'00000001'
 MOVWF counter_n

 return
GET_KEY
 BANKSEL counter_col
 BTFSC counter_col,0
 call GET_COL0
 BTFSC counter_col,1
 call GET_COL1 
 BTFSC counter_col,2
 call GET_COL2
 BTFSC counter_col,3
 call GET_COL3
 LSLF counter_col,1
 BTFSC counter_col,4
 call PUT_KEY
 BTFSC counter_col,4
 call RESET_KEY
 RETURN
DELAY_LED
 movlw B'00000000'
 INCFSZ delay,1
 BTFSC delay,4
 goto DELAY_LED
 CLRF delay
 return
RST_PORT
 movlw B'00001000'
 MOVWF port
 return
LED1
;    BANKSEL LATC
;    CLRF LATC    
    MOVF set1,0
    BANKSEL LATA
    MOVWF LATA     
    BANKSEL LATC
    MOVLW b'00001000'
    MOVWF LATC
    RETURN
LED2
;    BANKSEL LATC
;    CLRF LATC    
    MOVF set2,0
    BANKSEL LATA
    MOVWF LATA     
    BANKSEL LATC
    MOVLW b'00000100'
    MOVWF LATC
    RETURN
LED3
;    BANKSEL LATC
;    CLRF LATC    
    BANKSEL set3
    MOVF set3,0
    BANKSEL LATA
    MOVWF LATA     
    BANKSEL LATC
    MOVLW b'00000010'
    MOVWF LATC
    RETURN
LED4
;    BANKSEL LATC
;    CLRF LATC    
    MOVF set4,0
    BANKSEL LATA
    MOVWF LATA     
    BANKSEL LATC
    MOVLW b'00000001'
    MOVWF LATC
    MOVLW b'00010000'
    MOVWF port    
    RETURN
 OUTPUT
    BANKSEL LATC
    CLRF LATC     
    BTFSC port,3
    call LED1
    BTFSC port,2
    call LED2
    BTFSC port,1
    call LED3
    BTFSC port,0
    call LED4
    LSRF port,1
    RETURN
START
;----------init---------
    BANKSEL ANSELB
    CLRF  ANSELB 
    movlw b'01101011';???4Mhz
     banksel OSCCON
     movwf OSCCON
     banksel TMR0
     movlw b'11100111'
     movwf TMR0 ;???
     banksel OPTION_REG
     movlw b'00000111'
     movwf OPTION_REG;???1:256
     banksel INTCON
     movlw b'10000000'
     movwf INTCON ;????
    BANKSEL TRISB
    movlw B'00000001'
    movwf TRISB
    banksel LATB
    movlw B'00111110'
    movwf LATB
    BANKSEL TRISB
    movlw B'00100001'
    movwf TRISB
    BANKSEL WPUB
    movlw b'11111111'
    MOVWF WPUB
    MOVLW b'00000000'
    BANKSEL TRISA
    MOVWF TRISA
    MOVLW b'00000000'
    BANKSEL TRISC
    MOVWF TRISC
;    BANKSEL IOCBP
;    bSf IOCBP,0
;    BCF IOCBP,5
;    BANKSEL IOCBN
;    bCf IOCBN,0
;    BSF IOCBN,5
;     
;    BANKSEL IOCBF
;    MOVLW B'00000000'
;    MOVWF IOCBF
    BANKSEL col
    MOVLW B'00001111'
    MOVWF col
    MOVLW B'00001111'
    MOVWF row
    MOVLW B'00000001'
    MOVWF counter_n
    MOVLW B'00000001'
;    BANKSEL counter_col
    MOVWF counter_col
    MOVLW B'00000001'
    MOVWF STATE
    MOVLW B'11111111'
    MOVWF key
    BANKSEL KEY_FINAL
    MOVLW b'11111111'
    MOVWF KEY_FINAL
    MOVLW B'11111111'
    MOVWF key_temp

    MOVLW b'11110001'
    MOVWF set1   
    MOVLW b'10000001'
    MOVWF set2   
    MOVLW b'11000001'
    MOVWF set3   
    MOVLW b'10110000'
    MOVWF set4  
    MOVLW b'00001000'
    MOVWF port
    
    MOVLW 0x07
    MOVWF KEY_BEFORE
    MOVLW 0x00
    MOVWF STATE_BEFORE
 
    MOVLW 0x80
    MOVWF M_CNT
    MOVLW 0x00
    MOVWF N_CNT
    MOVLW 0xFF
    MOVWF R_LONG
 
    MOVLW 0x0A
    MOVWF L3_LONG
    MOVLW 0x14
    MOVWF L1_LONG
    MOVLW 0x8E
    MOVWF L2_LONG
    banksel TYPE
    MOVLW 0x04
    MOVWF TYPE
    MOVLW 0x04
    MOVWF TYPE_BEFORE
    MOVLW 0x01
    MOVWF CURRENT_COUNT
    banksel COUNT0
    MOVLW B'00000000'
    MOVWF COUNT0
    MOVWF COUNT1
    MOVWF COUNT2
    MOVWF COUNT3
    MOVWF COUNT4
    MOVWF COUNT5
    MOVWF COUNT6
    MOVWF COUNT7
    MOVWF COUNT8
    MOVWF COUNT9
    
    banksel INTCON
    movlw b'10100000'
    movwf INTCON ;????

;----------initend---------    
loop    
 
    goto loop
    ; loop forever

    END
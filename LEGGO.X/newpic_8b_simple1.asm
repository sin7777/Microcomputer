#include "p16F1786.inc"
    
; CONFIG1
; __config 0xFFFC
 __CONFIG _CONFIG1, _FOSC_INTOSC & _WDTE_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOREN_ON & _CLKOUTEN_OFF & _IESO_ON & _FCMEN_ON
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _WRT_OFF & _VCAPEN_OFF & _PLLEN_ON & _STVREN_ON & _BORV_LO & _LPBOR_OFF & _LVP_ON
    ; TODO INSERT CONFIG CODE HERE USING CONFIG BITS GENERATOR
    
UDATA_SHR
 KEY res 1h  ;??
 KEY_BEFORE res 1h ;?????????
 STATE res 1h   ;??
 STATE_BEFORE  ;?????????
 M_CNT res 1h   ;??????
 N_CNT res 1h   ;??????
 R_LONG res 1h  ;?????
 L1_LONG res 1h   ;?????
 L2_LONG res 1h    ;?????
 L3_LONG RES 1h    ;?????
 TYPE res 1h   ;????
 COUNT RES 1h   ;??????main????10???
 

RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    INT                   ; go to beginning of program

; TODO ADD INTERRUPTS HERE IF USED

MAIN_PROG CODE                      ; let linker place main program

INT
 movlw b'01101011'
 banksel OSCCON
 movwf OSCCON
 banksel TMR0
 movlw b'11000000'
 movwf TMR0 
 banksel OPTION_REG
 movlw b'00000111'
 movwf OPTION_REG
 banksel INTCON
 movlw b'10100000'
 movwf INTCON 
 
 MOVLW 0x0A
 MOVWF KEY
 MOVLW 0x07
 MOVWF KEY_BEFORE
 MOVLW 0x01
 MOVWF STATE
 MOVLW 0x00
 MOVWF STATE_BEFORE
 MOVLW 0x80
 MOVWF M_CNT
 MOVLW 0x00
 MOVWF N_CNT
 MOVLW 0xFF
 MOVWF R_LONG
 MOVLW 0x0A
 MOVWF L3_LONG
 MOVLW 0x14
 MOVWF L1_LONG
 MOVLW 0x8E
 MOVWF L2_LONG
 MOVLW 0x00
 MOVWF TYPE
 MOVLW 0x01
 MOVWF COUNT
 
 GOTO START
 
;chang KEY
CHANGE_KEY
 ;?KEY????KEY_BEFORE
 MOVF KEY,0
 MOVWF KEY_BEFORE
 
 ;STATE??????????,??STATE_BEFORE??1
 ;??????????
 MOVLW B'00000001'
 MOVWF KEY_BEFORE
 RETURN
 
; no change key
NO_CHANGE_KEY
 ;?STATE?STATE_BEFORE????????????????
 MOVF STATE,0
 XORWF STATE_BEFORE,0
 SUBLW B'00000000'
 BTFSS STATUS,0
 GOTO INEQUAL
 GOTO EQUAL
    INEQUAL
	MOVF STATE,0
	SUBLW B'00000000'
	BTFSS STATUS,0
	GOTO ONE_TO_ONE    ;1=1,1 -> 1
	GOTO ZERO_TO_ZERO   ;0=0,0 -> 0
	
    EQUAL 
	MOVF STATE,0
	SUBLW B'00000000'
	BTFSS STATUS,0
	GOTO ZERO_TO_ONE  ;0 -> 1
	GOTO ONE_TO_ZERO  ;1 -> 0
	
    ONE_TO_ZERO
	INCF N_CNT
	GOTO NO_CHANGE_KEL_END ;?1?0?????????
	
    ZERO_TO_ONE
	INCF M_CNT
	MOVLW B'00000000'
	MOVWF R_LONG  ;?????????
	GOTO NO_CHANGE_KEL_END ;?0?1?????????
	
    ZERO_TO_ZERO
	INCF N_CNT ;N_CNT++
	MOVF N_CNT,0 ;??N_CNT?????2
	SUBLW B'00000010'
	BTFSC STATUS,0
	GOTO CLEAR_M_CNT;M_CNT=0
	GOTO ZERO_CONTINUE
	
	CLEAR_M_CNT
	    MOVLW B'00000000'
	    MOVWF M_CNT
	    GOTO NO_CHANGE_KEL_END
	    
	ZERO_CONTINUE
	    MOVF R_LONG,0  ;??R<L3,
	    SUBWF L3_LONG
	    BTFSC STATUS,0
	    GOTO DOUBLE_PRESS;?????
	    GOTO ZERO_CONTINUE_CONTIUNE;??
	    
	DOUBLE_PRESS
	    MOVLW B'00000001'
	    MOVWF TYPE  ;01????
	    INCF L2_LONG,0  ;??N_CNT=L2_LONG+1
	    MOVWF N_CNT
	    GOTO NO_CHANGE_KEL_END
	    
	ZERO_CONTINUE_CONTIUNE
	    MOVF L2_LONG,0 ;??L2 = N ?
	    
	    SUBWF N_CNT
	    BTFSC STATUS,0
	    GOTO LONG_PRESS  ;?????
	    GOTO NO_CHANGE_KEL_END
	    
	LONG_PRESS
	    MOVLW B'00000010'
	    MOVWF TYPE ;10????
	    GOTO NO_CHANGE_KEL_END
 
    ONE_TO_ONE
	INCF M_CNT ;M_CNT++
	INCF R_LONG ;R_LONG++
	MOVF M_CNT,0 ;??M_CNT?????2
	SUBLW B'00000010'
	BTFSC STATUS,0
	GOTO CLEAR_N_CNT;N_CNT=0
	GOTO ONE_CONTINUE
	
	CLEAR_N_CNT
	    MOVLW B'00000000' ;??N_CNT
	    MOVWF N_CNT
	    GOTO NO_CHANGE_KEL_END
	    
	ONE_CONTINUE
	    
 
 NO_CHANGE_KEL_END
 ;??STATE_BEFORE
 RETURN
 
;??TYPED??????
JUDGE_TYPE
 
 RETURN
 
START
 ;??key????
 MOVF KEY,0
 XORWF KEY_BEFORE,0
 SUBLW B'00000000'
 BTFSS STATUS,0
 CALL CHANGE_KEY;change key ??
 CALL NO_CHANGE_KEY;NO change ??
 
 ;?? type???
 CALL JUDGE_TYPE

    END